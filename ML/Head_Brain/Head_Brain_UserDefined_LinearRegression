import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt 

def HeadBrainPredictor():
    # Load the data

    data = pd.read_csv('headbrain.csv')
    print("Size of data set = ",data.shape)

    # Independent Variable 
    X = data['Head Size(cm^3)'].values
    # Dependent Variable 
    Y = data['Brain Weight(grams)'].values

    # Least Square Method 
    mean_x = np.mean(X)
    mean_y = np.mean(Y)

    n = len(X)

    numerator = 0
    denomenator = 0

    # Equation of line y = m(x) + c

    for i in range(n):
        numerator = numerator + (X[i] - mean_x) * (Y[i] - mean_y)
        denomenator += (X[i] - mean_x)**2

    m = numerator / denomenator 
    c = mean_y - (m * mean_x)

    print("Slope of Regression line is = ",m)
    print("Y intercept of Regression line is ",c)

    max_x = np.max(X) + 100
    min_x = np.min(X)-100

    # Display plotting of above points 

    x = np.linspace(min_x,max_x,num = n)

    y = c + m * x

    # Findout goodness of fit i.e RSquare
    ss_r = 0 # numerator 
    ss_t = 0 # demo

    Arr = list()

    for i in range(n):
        y_pred = c + m * X[i]
        Arr.append(y_pred)
        ss_r += (Y[i] - y_pred)**2
        ss_t += (Y[i] - mean_y)**2
    
    r2 = 1 - (ss_r/ss_t)

    print("R2 = ",r2)

    plt.plot(x,y, color='#58b970',label='Regression Line')

    plt.scatter(X,Y, color='#ef5423' ,label='scatter plot')
    plt.scatter(X,Arr, color='#800080' ,label='Y predicted points')

    plt.xlabel('Head size in cm3')

    plt.ylabel('Brain weight in gram')

    plt.legend()
    plt.show()


def main():
    print("---- Head Brain Case Study ----")

    print("---- Supervised Machine Learning ----")

    print(" ---- Using User Defined Linear Regression ---- ")

    HeadBrainPredictor()

if __name__ == "__main__":
    main()

